name: Publish Artifact

on:
  release:
    type: published
  workflow_call:
    secrets:
      OSSRH_USERNAME:
        required: true
      OSSRH_TOKEN:
        required: true
      OSSRH_GPG_SECRET_KEY:
        required: true
      MAVEN_GPG_PASSPHRASE:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 50
      - name: Update version
        id: version
        run: |
          echo "GITHUB_REF is a tag you set for the release"
          echo "Your GitHub ref: ${GITHUB_REF}"
          VERSION=`echo "${GITHUB_REF}" | cut -f 3 -d "/"`
          echo "Preparing version ${VERSION}"
          echo "__version__ = \"${VERSION}\"" > __version__.py
          echo "##[set-output name=version;]$(echo ${VERSION})"
      - uses: vemel/update-changelog@0.0.1
        id: changelog
        with:
          version: ${{ steps.version.outputs.version }}
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v2
        with:
          commit-message: Release ${{ steps.version.outputs.version }}
          labels: release, bot
          title: "Release ${{ steps.version.outputs.version }}"
          body: |
            # Release ${{ steps.version.outputs.version }}
            
            Merge this PR to update your version and changelog!
            
            ## Included Pull Requests
            
            ${{ steps.changelog.outputs.pulls_list_md }}

      # https://github.com/actions/setup-java
      # Sets up Java, preparing the settings.xml to deploy to Sonatype (Maven)
      - name: Set up for deploy to Sonatype
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: SONATYPE_USERNAME # env variable for sonatype username
          server-password: SONATYPE_PASSWORD # env variable for sonatype password
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }} # Value of the GPG private key to import
          gpg-passphrase: CODESIGN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      # Execute deployment to sonatype
      - name: Publish to Sonatype
        run: mvn deploy -Prelease -DskipTests --batch-mode
        env:
          SONATYPE_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          CODESIGN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}