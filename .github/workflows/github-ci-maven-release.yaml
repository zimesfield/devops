name: Publish Artifact

on:
  push:
    branches:
      - main
  workflow_call:
    secrets:
      OSSRH_USERNAME:
        required: true
      OSSRH_TOKEN:
        required: true
      OSSRH_GPG_SECRET_KEY:
        required: true
      MAVEN_GPG_PASSPHRASE:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
#    if: startsWith(github.ref, 'refs/tags/')
    steps:
      # https://github.com/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 50
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v0.4.4
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.releaseversion }}
          release_name: ${{ github.event.inputs.releaseversion }}
          body: |
            Latest version is:
            ```
               <version>${{ github.event.inputs.releaseversion }}</version>

            ```
            
            ### Things that changed in this release
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
      # https://github.com/actions/setup-java
      # Sets up Java, preparing the settings.xml to deploy to Sonatype (Maven)
      - name: Set up for deploy to Sonatype
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: SONATYPE_USERNAME # env variable for sonatype username
          server-password: SONATYPE_PASSWORD # env variable for sonatype password
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }} # Value of the GPG private key to import
          gpg-passphrase: CODESIGN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      # Execute deployment to sonatype
      - name: Publish to Sonatype
        run: mvn deploy -Prelease -DskipTests --batch-mode
        env:
          SONATYPE_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          CODESIGN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}