name: Publish Artifact

on:
  push:
    branches:
      - main
  workflow_call:
    secrets:
      OSSRH_USERNAME:
        required: true
      OSSRH_TOKEN:
        required: true
      OSSRH_GPG_SECRET_KEY:
        required: true
      MAVEN_GPG_PASSPHRASE:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
#    if: startsWith(github.ref, 'refs/tags/')
    steps:
      # https://github.com/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 50

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: Create/update release
        uses: ncipollo/release-action@v1
        with:
          # This pulls from the "Get Changelog Entry" step above, referencing it's ID to get its outputs object.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          tag: ${{ steps.changelog_reader.outputs.version }}
          name: Release ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/actions/setup-java
      # Sets up Java, preparing the settings.xml to deploy to Sonatype (Maven)
      - name: Set up for deploy to Sonatype
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: SONATYPE_USERNAME # env variable for sonatype username
          server-password: SONATYPE_PASSWORD # env variable for sonatype password
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }} # Value of the GPG private key to import
          gpg-passphrase: CODESIGN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      # Execute deployment to sonatype
      - name: Publish to Sonatype
        run: mvn deploy -Dversion=${{ steps.changelog_reader.outputs.version }} -Prelease -DskipTests --batch-mode
        env:
          SONATYPE_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          CODESIGN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}