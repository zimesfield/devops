name: Publish Maven Artifact

on:
#  workflow_dispatch:
#    inputs:
#      logLevel:
#        description: 'Log level'
#        required: true
#        default: 'warning'
#        type: choice
#        options:
#          - info
#          - warning
#          - debug
#      tags:
#        description: 'Test scenario tags'
#        required: false
#        type: boolean
#      environment:
#        description: 'Environment to run tests against'
#        type: environment
#        required: true

  push:
    branches-ignore:
      - 'release*'

jobs:
  call-workflow:
    uses: ./github-ci-maven.yaml@main
    with:
      environment: ${{ github.event.inputs.environment }}
#  publish-artifact:
#    timeout-minutes: 30
#    needs:
#      - coverage
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: 11
#          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
#          server-username: MAVEN_USERNAME # env variable for username in deploy
#          server-password: MAVEN_PASSWORD # env variable for token in deploy
#          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }} # Value of the GPG private key to import
#          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
#
##      - name: Publish to Maven Central
##        run: |
##          echo "Log level: $LEVEL"
##          echo "Tags: $TAGS"
##          echo "Environment: $ENVIRONMENT"
##          if ($ENVIRONMENT == 'prod')
##            NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
##            echo "New version: ${NEW_VERSION}"
##            ./mvnw clean deploy -B -Drevision=${NEW_VERSION} -Prelease --batch-mode -D skipTests --no-transfer-progress
##          fi
#
#
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
#          LEVEL: ${{ github.event.inputs.logLevel }}
#          TAGS: ${{ github.event.inputs.tags }}
#          ENVIRONMENT: ${{ github.event.inputs.environment }}
