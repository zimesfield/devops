name: Feature Branch


on:
  workflow_call:
    inputs:
      environment:
        description: 'Job to run.'
        type: string
        default: 'dev'
#  workflow_dispatch:

#      version:
#        required: true
#        type: string
#    secrets:
#      MAVEN_USERNAME:
#        required: true
#      MAVEN_PASSWORD:
#        required: true
#      MAVEN_GPG_PASSPHRASE:
#        required: true

jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 11 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}
      - run: ./mvnw --batch-mode --update-snapshots test

  verify:
    name: Integration Test
    needs: test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 11 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}
      - run: ./mvnw --batch-mode --update-snapshots verify

  coverage:
    name: Coverage Report
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Run coverage
        run: ./mvnw -B verify -Pcoverage --no-transfer-progress
#      - name: codecov jacoco report
#        uses: codecov/codecov-action@v1
#          with:
#            file: ./**/target/site/jacoco/jacoco.xml
#            name: codecov
##
  upload-artifact-to-github:
    name: Upload Artifact To Github
    needs: [verify,coverage]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: ./mvnw install -Dmaven.test.skip=true --batch-mode --update-snapshots
      - name: Upload Jar to stagging
        run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging

  publish-artifact:
    needs:
      - upload-artifact-to-github
    runs-on: ubuntu-latest
    steps:
      - name: Bump Version
        id: bump
        uses: nnichols/maven-version-bump-action@v3
        with:
          github-token: ${{ secrets.github_token }}
      - name: Print Version
        run: "echo 'New Version: ${{steps.bump.outputs.version}}'"
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

        #      - name: Publish to Maven Central
        #        run: |
        #          echo "Log level: $LEVEL"
        #          echo "Tags: $TAGS"
        #          echo "Environment: $ENVIRONMENT"
        #          if ($ENVIRONMENT == 'prod')
        #            NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
        #            echo "New version: ${NEW_VERSION}"
        #            ./mvnw clean deploy -B -Drevision=${NEW_VERSION} -Prelease --batch-mode -D skipTests --no-transfer-progress
        #          fi


        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          LEVEL: ${{ github.event.inputs.logLevel }}
          TAGS: ${{ github.event.inputs.tags }}
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          POMPATH: ../../
