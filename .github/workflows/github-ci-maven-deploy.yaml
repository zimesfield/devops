name: Publish Maven Artifact

on:
  workflow_call:
    inputs:
      environment:
        description: 'Job to run.'
        type: string
        required: false
        default: 'prod'
    secrets:
      OSSRH_USERNAME:
        required: true
      OSSRH_TOKEN:
        required: true
      OSSRH_GPG_SECRET_KEY:
        required: true
      MAVEN_GPG_PASSPHRASE:
        required: true

jobs:
  test:
    name: Unit Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 11 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}
      - run: ./mvnw --batch-mode --update-snapshots test

  verify:
    name: Integration Test
    needs: test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 11 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}
      - run: ./mvnw --batch-mode --update-snapshots verify
  coverage:
    name: Coverage Report
    needs: [ test, verify ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Run coverage
        run: ./mvnw -B verify -Pcoverage --no-transfer-progress

  publish:
    name: Publish to artifactory
    timeout-minutes: 30
    needs: [ coverage ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: ${{ secrets.OSSRH_USERNAME }} # env variable for username in deploy
          server-password: ${{ secrets.OSSRH_TOKEN }} # env variable for token in deploy
#          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }} # Value of the GPG private key to import
#          gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }} # env variable for GPG private key passphrase

      - name: Publish to Maven Central
        run: ./mvnw clean deploy -B -Prelease --batch-mode -D skipTests --no-transfer-progress
      - name: Clean up
        run: rm "${HOME}/.m2/settings.xml"